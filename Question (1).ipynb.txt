#Q1. Data Visualization and Statistical Measures: #For this question, you are required to analyse the iris dataset (iris.csv) using Python. Perform all #possible data visualization techniques (histograms, scatter plots, box plots, etc.) on all numerical 
#columns of the dataset. Additionally, calculate all possible statistical measures (mean, median, 
#mode, standard deviation, etc.) for each numerical column. 
import pandas  as pd
import matplotlib.pyplot  as plt
import seaborn  as sns
from scipy  import stats
# Load the iris dataset
data  = pd.read_csv( r"C:\Users\User\Downloads\iris.csv" )
# Display the first few rows of the dataset
print (data.head())
# Data Visualization
# Histograms for numerical columns
data.hist(figsize =( 10,  6))
plt.tight_layout()
plt.show()
# Scatter plots for numerical columns
sns.pairplot(data, hue ='Species' , height =2.5 )
plt.show()
# Box plots for numerical columns
plt.figure(figsize =( 10,  6))
sns.boxplot(data =data.drop( 'Species' , axis =1))
plt.show()
# Load the iris dataset
data  = pd.read_csv( r"C:\Users\User\Downloads\iris.csv" )
# Calculate mean, median, mode, and standard deviation statistical_measures  = {
'mean' : data.mean(),
'median' : data.median(),
'mode' : data.mode().iloc[ 0],   # mode() returns a DataFrame, so we use iloc[0] to get the first row (which contains the mode)
'std_dev' : data.std()
}
# Display the statistical measures
for column, measures  in statistical_measures.items():
print ( f" \n {column . capitalize() }: \n {measures }")
   Unnamed: 0  Sepal.Length  Sepal.Width  Petal.Length  Petal.Width Species
0           1           5.1          3.5           1.4          0.2  setosa
1           2           4.9          3.0           1.4          0.2  setosa
2           3           4.7          3.2           1.3          0.2  
setosa
3           4           4.6          3.1           1.5          0.2  setosa
4           5           5.0          3.6           1.4          0.2  setosa



Mean:
Unnamed: 0      75.500000 Sepal.Length     5.843333 Sepal.Width      3.057333 Petal.Length     3.758000 Petal.Width      1.199333 dtype: float64
Median:
Unnamed: 0      75.50 Sepal.Length     5.80 Sepal.Width      3.00 Petal.Length     4.35 Petal.Width      1.30 dtype: float64
Mode:
Unnamed: 0           1 Sepal.Length       5.0 Sepal.Width        3.0 Petal.Length       1.4 Petal.Width        0.2 Species         setosa Name: 0, dtype: object
Std_dev:
Unnamed: 0      43.445368 Sepal.Length     0.828066 Sepal.Width      0.435866 Petal.Length     1.765298 Petal.Width      0.762238 dtype: float64
C:\Users\User\AppData\Local\Temp\ipykernel_10552\974454737.py:33: FutureWarning: The default value of numeric_only in DataFrame.mean is deprecated. In a future version, it will default to False. In addition, specifying 'numeric_only=None' is deprecated. Select only valid columns or specify the value of numeric_only to silence this warning.
  'mean': data.mean(), C:\Users\User\AppData\Local\Temp\ipykernel_10552\974454737.py:34: FutureWarning: The default value of numeric_only in DataFrame.median is deprecated. In a future version, it will default to False. In addition, specifying 'numeric_only=None' is deprecated. Select only valid columns or specify the value of numeric_only to silence this warning.
  'median': data.median(), C:\Users\User\AppData\Local\Temp\ipykernel_10552\974454737.py:36: FutureWarning: The default value of numeric_only in DataFrame.std is deprecated. In a future version, it will default to False. In addition, specifying 'numeric_only=None' is deprecated. Select only valid columns or specify the value of numeric_only to silence this warning.
  'std_dev': data.std()
